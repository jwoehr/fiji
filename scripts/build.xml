<?xml version="1.0"?>

<!-- Written to assume that classpath is rooted in the current directory. -->
<!-- So this should be OK if you make this script in the root of a filesystem. -->
<!-- If not, you may prefer to adjust the basedir, or move some directories around. -->
<!-- The idea is that both Ant and NetBeans have to know what the package root is -->
<!-- for the classes in your application. -->
<project name="fiji" basedir="." default="all">

    <target name="usage">
        <echo>

            ant [-Dvar=value ...] target

            Use ant to build Fiji.

            Targets are:
                all    .. builds Fiji and makes a jar of it.
                clean  .. deletes the jar and all class files.
                jar    .. builds the jar (and Fiji if necessary.
                usage  .. displays this message.

            This script is written to reside in the top level of the
            repository. A good way to invoke it is to cd into the
            base directory and invoke it as

                ant [-Dvar=val [-Dvar=val ...]] target

            The behavior of the build is controlled by passing variables on the
            command line to this build script. You pass in a variable by adding
            a java-style -Dvar=value switch to the ant command line.

            The variables are shown below with their default values. Elements
            in {curly braces} indicate substitutions of the values of other
            extant variables.
                
                fiji.release=1.2_beta
                fiji.source.directory=.
                fiji.destination.directory=.
                fiji.jar.filename=fiji.{fiji.release}.jar
                fiji.jar.manifest.filename=fiji.{fiji.release}.mf
                opensource.jar.directory=/usr/local/java
                j2ee.jar.filepath=/usr/j2sdkee1.3/lib/j2ee.jar
                fiji.javadoc.destination.directory={fiji.destination.directory}/html/doc
                fiji.compile.debug=false
        </echo>
    </target>

    <property name="fiji.release" value="1.2_beta"/>
    <property name="fiji.source.directory" value="."/>
    <property name="fiji.destination.directory" value="."/>
    <property name="fiji.jar.filename" value="fiji.${fiji.release}.jar"/>
    <property name="fiji.jar.fully.qualified.pathname" value="${fiji.destination.directory}/${fiji.jar.filename}"/>
    <property name="fiji.jar.manifest.filename" value="fiji.${fiji.release}.mf"/>
    <property name="opensource.jar.directory" value="/usr/local/java"/>
    <property name="j2ee.jar.filepath" value="/usr/j2sdkee1.3/lib/j2ee.jar"/>
    <property name="fiji.javadoc.destination.directory" value="${fiji.destination.directory}/html/doc"/>
    <property name="fiji.compile.debug" value="false"/>

    <target name="init">
              <!-- nada -->
    </target>

    <target name="compile" depends="init">
        <!-- Both srcdir and destdir should be package roots. -->
        <!-- They could be different of course; in that case NetBeans can also be set -->
        <!-- up to compile to a different filesystem in the same way; see Compiler Types: -->
        <javac srcdir="${fiji.source.directory}" destdir="${fiji.destination.directory}" debug="${fiji.compile.debug}" deprecation="true">
            <exclude name="com/SoftWoehr/util/SQL*.java"/>
            <exclude name="com/SoftWoehr/JaXWT/*IFS*.java"/>
            <exclude name="com/SoftWoehr/FIJI/examples/**"/>
        </javac>
    </target>

    <target name="jar" depends="init,compile">
        <!-- To make a standalone app: -->
        <!-- 1. Create a myapp.mf manifest somewhere. -->
        <!-- 2. Put in it: -->
        <!--    Manifest-Version: 1.0 -->
        <!--    Main-Class: com.foo.Main -->
        <!-- 3. Pass to <jar>: manifest="myapp.mf" -->
       <jar jarfile="${fiji.jar.fully.qualified.pathname}" compress="true" basedir="${fiji.destination.directory}">
            <include name="com/**"/>
            <exclude name="${fiji.source.directory}/com/SoftWoehr/util/SQL*.*"/>
            <exclude name="${fiji.destination.directory}/com/SoftWoehr/util/SQL*.*"/>
            <exclude name="${fiji.source.directory}/com/SoftWoehr/JaXWT/*IFS*.*"/>
            <exclude name="${fiji.destination.directory}/com/SoftWoehr/JaXWT/*IFS*.*"/>
            <exclude name="**.jar"/>
       </jar>
    </target>

    <target name="all" depends="init,jar" description="Build everything.">
        <echo message="Fiji built"/>
    </target>

    <target name="javadoc" depends="init" description="Javadoc for my API.">
        <mkdir dir="${fiji.javadoc.destination.directory}"/>
        <javadoc packagenames="com.*" destdir="${fiji.javadoc.destination.directory}">
            <sourcepath>
                <pathelement location="${fiji.source.directory}"/>
            </sourcepath>
        </javadoc>
    </target>

    <target name="clean" depends="init" description="Clean all build products.">
        <delete>
            <fileset dir="${fiji.destination.directory}">
                <include name="**/*.class"/>
            </fileset>
        </delete>
    <delete file="${fiji.jar.fully.qualified.pathname}"/>
        <delete dir="${fiji.javadoc.destination.directory}"/>
    </target>

</project>
